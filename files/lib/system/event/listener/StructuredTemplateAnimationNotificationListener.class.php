<?php// wcf importsrequire_once(WCF_DIR.'lib/system/event/EventListener.class.php');require_once(WCF_DIR.'lib/data/user/notification/NotificationList.class.php');require_once(WCF_DIR.'lib/data/user/NotificationUser.class.php');/** * Implements new animation for notifications. * * @author		Jeffrey 'Kiv' Reichardt * @copyright	2011-2012 devlabor.com * @package     	com.devlabor.achievements * @license		CC BY-NC-SA 3.0 <http://creativecommons.org/licenses/by-nc-sa/3.0/legalcode> * @subpackage	system.event.listener */class StructuredTemplateAnimationNotificationListener implements EventListener{	/**	 * @see EventListener::execute()	 */	public function execute($eventObj, $className, $eventName){		if((WCF::getUser()->userID == 0) || (!MODULE_USER_NOTIFICATION)) return;		$user = new NotificationUser(null, WCF::getUser(), false);		if($user->hasOutstandingNotifications()){			// get outstanding notifications			$notificationList = new NotificationList();			$notificationList->sqlSelects .= "notification_message.*,";			$notificationList->sqlJoins .= " INNER JOIN      wcf".WCF_N."_user_notification_message notification_message											ON              (notification_message.notificationID = notification.notificationID															AND     notification_message.notificationType = 'animation')";			$notificationList->sqlConditions = "notification.userID = ".$user->userID."													AND     notification.confirmed = 0";			$notificationList->sqlLimit = 3;			$notificationList->readObjects();			$animNotifications = $notificationList->getObjects();					if(count($animNotifications)){				WCF::getTPL()->assign('animNotifications', $animNotifications);				WCF::getTPL()->append(array(					'specialStyles' => '<script type="text/javascript" src="'.RELATIVE_WCF_DIR.'js/Achievement.class.js"></script>',					'additionalFooterContents' => WCF::getTPL()->fetch('animationNotifications')				));			}		}	}}?>